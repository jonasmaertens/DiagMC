\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{o}{...}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{k+kc}{None}\PYG{p}{:}
  \PYG{c+c1}{\PYGZsh{} check parameters}
  \PYG{k}{if} \PYG{n}{tau\PYGZus{}max} \PYG{o}{\PYGZlt{}=} \PYG{n}{tau\PYGZus{}min}\PYG{p}{:}
      \PYG{k}{raise} \PYG{n+ne}{ValueError}\PYG{p}{(}\PYG{l+s+s2}{\PYGZdq{}tau\PYGZus{}max must be greater than tau\PYGZus{}min\PYGZdq{}}\PYG{p}{)}
  \PYG{c+c1}{\PYGZsh{} And so on...}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{rng} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{random}\PYG{o}{.}\PYG{n}{default\PYGZus{}rng}\PYG{p}{()} \PYG{c+c1}{\PYGZsh{} set up random number generator}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{uni} \PYG{o}{=} \PYG{k}{lambda} \PYG{n}{a}\PYG{p}{,} \PYG{n}{b}\PYG{p}{:} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{rng}\PYG{o}{.}\PYG{n}{random}\PYG{p}{()} \PYG{o}{*} \PYG{p}{(}\PYG{n}{b} \PYG{o}{\PYGZhy{}} \PYG{n}{a}\PYG{p}{)} \PYG{o}{+} \PYG{n}{a}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n\PYGZus{}equ}\PYG{p}{,} \PYG{n}{n\PYGZus{}sam}\PYG{p}{,} \PYG{n}{tau\PYGZus{}min}\PYG{p}{;} \PYG{n}{tau\PYGZus{}max}\PYG{p}{,} \PYG{n}{V}\PYG{p}{,} \PYG{n}{use\PYGZus{}change\PYGZus{}alpha} \PYG{o}{=} \PYG{o}{...} \PYG{c+c1}{\PYGZsh{} Set up config parameters}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{tau}\PYG{p}{,} \PYG{n}{alpha}\PYG{p}{,} \PYG{n}{beta}\PYG{p}{,} \PYG{n}{tau1}\PYG{p}{,} \PYG{n}{tau2} \PYG{o}{=} \PYG{o}{...} \PYG{c+c1}{\PYGZsh{} Set up state variables}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n\PYGZus{}tau\PYGZus{}acc}\PYG{p}{,} \PYG{n}{n\PYGZus{}tau\PYGZus{}rej}\PYG{p}{,} \PYG{n}{n\PYGZus{}alpha\PYGZus{}acc}\PYG{p}{,} \PYG{n}{n\PYGZus{}alpha\PYGZus{}rej}\PYG{o}{...} \PYG{o}{=} \PYG{l+m+mi}{0} \PYG{c+c1}{\PYGZsh{} Counters}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{samples} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{zeros}\PYG{p}{((}\PYG{n}{n\PYGZus{}sam}\PYG{p}{,} \PYG{l+m+mi}{2}\PYG{p}{)} \PYG{k}{if} \PYG{n}{use\PYGZus{}change\PYGZus{}alpha} \PYG{k}{else} \PYG{n}{n\PYGZus{}sam}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} Set up sample array}
  \PYG{c+c1}{\PYGZsh{} Set up updater methods}
  \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{updaters} \PYG{o}{=} \PYG{p}{[}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{change\PYGZus{}tau}\PYG{p}{]}
  \PYG{k}{if} \PYG{n}{use\PYGZus{}change\PYGZus{}alpha}\PYG{p}{:}
      \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{updaters}\PYG{o}{.}\PYG{n}{append}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{change\PYGZus{}alpha}\PYG{p}{)}
  \PYG{c+c1}{\PYGZsh{} And so on...}

\end{Verbatim}
